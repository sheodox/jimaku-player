doctype html
html(lang="en")
	head
		title Jimaku Player Video Player
		style.
			html,
			body {
				margin: 0;
				padding: 0;
				font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
				text-align: center;
				overflow: hidden;
			}
		link(rel="stylesheet", href="/fontawesome/css/all.min.css")
		if !development
			each fileName in cssImports
				link(rel="stylesheet", href=`/${fileName}`)
		script. 
			// these are polyfills for APIs tampermonkey provides for use in the dev server
			// their type declarations are in src/static/subtitler/types.d.ts
			// and they are requested in the /dist.js build script

			window.GM_setValue = (key, value) => {
				return localStorage.setItem(key, JSON.stringify(value));
			};
			window.GM_getValue = (key, fallback = null) => {
				const val = localStorage.getItem(key);
				return val ? JSON.parse(val) : fallback;
			};

			let setClipboardWarned = false;
			// no-op to prevent errors, cannot match the unprompted copies of GM_setClipboard
			window.GM_setClipboard = () => {
				if (!setClipboardWarned) {
					setClipboardWarned = true;
					console.warn(`GM_setClipboard usage was attempted, this is not polyfilled by the local Jimaku Player!`);
				}
			};

			window.GM_xmlhttpRequest = (details) => {
				console.warn("Because of CORS settings, GM_xmlhttpRequest cannot be used through the local player and is not polyfilled. Request details:", details);
				details.onload({status: 200});
			};
	body
		div#player-root

		if development
			script(type="module", src="http://localhost:3000/@vite/client")
			script(type="module", src="http://localhost:3000/src/static/local-player/player/player.ts")
		else
			script(src=`/${scriptEntryFile}`, type="module")
